{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanguerrero/Documents/Programming/GitHub/portfolio/react-app/src/components/Payment/PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classes from \"./Payment.module.css\";\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      padding: 10,\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkitautofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\n\nconst PaymentForm = () => {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const message = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"You just bought a sweet spatula ! Congrats!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"https://localhost:4000/payment\", {\n          amount: 1000,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  const form = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: classes.FormGroup,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.FormRow,\n        children: /*#__PURE__*/_jsxDEV(CardElement, {\n          options: CARD_OPTIONS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !success ? form : message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PaymentForm, \"6hDlQMsgCa6cRk+jdFUeEqLw/RU=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Users/jonathanguerrero/Documents/Programming/GitHub/portfolio/react-app/src/components/Payment/PaymentForm.js"],"names":["React","useState","classes","CardElement","useElements","useStripe","axios","CARD_OPTIONS","iconStyle","style","base","padding","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","success","setSuccess","stripe","elements","message","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","console","log","form","FormGroup","FormRow","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classes from \"./Payment.module.css\";\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\n\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      padding: 10,\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkitautofill\": { color: \"#fce883\" },\n      \"::placeholder\": { color: \"#87bbfd\" },\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\",\n    },\n  },\n};\n\nconst PaymentForm = () => {\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const message = (\n    <div>\n      <h2>You just bought a sweet spatula ! Congrats!</h2>\n    </div>\n  );\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n    });\n\n    if (!error) {\n      try {\n        const { id } = paymentMethod;\n        const response = await axios.post(\"https://localhost:4000/payment\", {\n          amount: 1000,\n          id,\n        });\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  const form = (\n    <form onSubmit={handleSubmit}>\n      <fieldset className={classes.FormGroup}>\n        <div className={classes.FormRow}>\n          <CardElement options={CARD_OPTIONS}></CardElement>\n        </div>\n      </fieldset>\n      <button className={classes.button}>Pay</button>\n    </form>\n  );\n\n  return <div>{!success ? form : message}</div>;\n};\n\nexport default PaymentForm;\n"]},"metadata":{},"sourceType":"module"}